// Generated by Dagger (https://dagger.dev).
package com.example.poststask.di;

import com.example.poststask.data.local.AppDatabase;
import com.example.poststask.data.local.PostDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvidePostDAOFactory implements Factory<PostDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public DatabaseModule_ProvidePostDAOFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public PostDao get() {
    return providePostDAO(appDatabaseProvider.get());
  }

  public static DatabaseModule_ProvidePostDAOFactory create(
      Provider<AppDatabase> appDatabaseProvider) {
    return new DatabaseModule_ProvidePostDAOFactory(appDatabaseProvider);
  }

  public static PostDao providePostDAO(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providePostDAO(appDatabase));
  }
}
