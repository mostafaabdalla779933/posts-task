// Generated by Dagger (https://dagger.dev).
package com.example.poststask.domain.usecase;

import com.example.poststask.domain.repo.IRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("dagger.hilt.android.scopes.ViewModelScoped")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeUseCase_Factory implements Factory<HomeUseCase> {
  private final Provider<IRepository> repositoryProvider;

  public HomeUseCase_Factory(Provider<IRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public HomeUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static HomeUseCase_Factory create(Provider<IRepository> repositoryProvider) {
    return new HomeUseCase_Factory(repositoryProvider);
  }

  public static HomeUseCase newInstance(IRepository repository) {
    return new HomeUseCase(repository);
  }
}
